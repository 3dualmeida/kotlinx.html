package html4k

import html4k.*
import html4k.impl.*

/*******************************************************************************
    DO NOT EDIT
    This file was generated by module generate
*******************************************************************************/

public class TABLE(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("table", consumer, initialAttributes), CommonEventsGroupFacade, CoreAttributeGroupFacade, CoreServerAttributeGroupFacade {
    var summary : String
        get()  = attributeStringf320f1e5.get(this, "summary")
        set(newValue) {attributeStringf320f1e5.set(this, "summary", newValue)}


}

public class TBODY(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("tbody", consumer, initialAttributes), CommonEventsGroupFacade, CoreAttributeGroupFacade, CoreServerAttributeGroupFacade {

}

public class TD(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("td", consumer, initialAttributes), CommonEventsGroupFacade, CoreAttributeGroupFacade, CoreServerAttributeGroupFacade {
    var rowSpan : RowSpan
        get()  = attributeRowSpanRowSpanValues7f2532dd.get(this, "rowspan")
        set(newValue) {attributeRowSpanRowSpanValues7f2532dd.set(this, "rowspan", newValue)}

    var headers : String
        get()  = attributeStringf320f1e5.get(this, "headers")
        set(newValue) {attributeStringf320f1e5.set(this, "headers", newValue)}

    var colSpan : ColSpan
        get()  = attributeColSpanColSpanValuesf6ad331d.get(this, "colspan")
        set(newValue) {attributeColSpanColSpanValuesf6ad331d.set(this, "colspan", newValue)}


}

public class TEXTAREA(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("textarea", consumer, initialAttributes), CommonEventsGroupFacade, CoreAttributeGroupFacade, CoreServerAttributeGroupFacade {
    var maxlength : String
        get()  = attributeStringf320f1e5.get(this, "maxlength")
        set(newValue) {attributeStringf320f1e5.set(this, "maxlength", newValue)}

    var readonly : Boolean
        get()  = attributeBooleanbf9581c0.get(this, "readonly")
        set(newValue) {attributeBooleanbf9581c0.set(this, "readonly", newValue)}

    var wrap : Wrap
        get()  = attributeWrapWrapValuesa85442dd.get(this, "wrap")
        set(newValue) {attributeWrapWrapValuesa85442dd.set(this, "wrap", newValue)}

    var rowS : RowS
        get()  = attributeRowSRowSValues1515617d.get(this, "rows")
        set(newValue) {attributeRowSRowSValues1515617d.set(this, "rows", newValue)}

    var autoFocus : Boolean
        get()  = attributeBooleanbf9581c0.get(this, "autofocus")
        set(newValue) {attributeBooleanbf9581c0.set(this, "autofocus", newValue)}

    var required : Boolean
        get()  = attributeBooleanbf9581c0.get(this, "required")
        set(newValue) {attributeBooleanbf9581c0.set(this, "required", newValue)}

    var disabled : Boolean
        get()  = attributeBooleanbf9581c0.get(this, "disabled")
        set(newValue) {attributeBooleanbf9581c0.set(this, "disabled", newValue)}

    var colS : ColS
        get()  = attributeColSColSValues4d47493d.get(this, "cols")
        set(newValue) {attributeColSColSValues4d47493d.set(this, "cols", newValue)}

    var placeholder : String
        get()  = attributeStringf320f1e5.get(this, "placeholder")
        set(newValue) {attributeStringf320f1e5.set(this, "placeholder", newValue)}

    var form : String
        get()  = attributeStringf320f1e5.get(this, "form")
        set(newValue) {attributeStringf320f1e5.set(this, "form", newValue)}

    var name : String
        get()  = attributeStringf320f1e5.get(this, "name")
        set(newValue) {attributeStringf320f1e5.set(this, "name", newValue)}


}

public class TFOOT(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("tfoot", consumer, initialAttributes), CommonEventsGroupFacade, CoreAttributeGroupFacade, CoreServerAttributeGroupFacade {

}

public class TH(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("th", consumer, initialAttributes), CommonEventsGroupFacade, CoreAttributeGroupFacade, CoreServerAttributeGroupFacade {
    var scope : Scope
        get()  = attributeScopeScopeValues171db0dd.get(this, "scope")
        set(newValue) {attributeScopeScopeValues171db0dd.set(this, "scope", newValue)}

    var rowSpan : RowSpan
        get()  = attributeRowSpanRowSpanValues7f2532dd.get(this, "rowspan")
        set(newValue) {attributeRowSpanRowSpanValues7f2532dd.set(this, "rowspan", newValue)}

    var headers : String
        get()  = attributeStringf320f1e5.get(this, "headers")
        set(newValue) {attributeStringf320f1e5.set(this, "headers", newValue)}

    var colSpan : ColSpan
        get()  = attributeColSpanColSpanValuesf6ad331d.get(this, "colspan")
        set(newValue) {attributeColSpanColSpanValuesf6ad331d.set(this, "colspan", newValue)}


}

public class THEAD(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("thead", consumer, initialAttributes), CommonEventsGroupFacade, CoreAttributeGroupFacade, CoreServerAttributeGroupFacade {

}

public class TIME(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("time", consumer, initialAttributes), CommonEventsGroupFacade, CoreAttributeGroupFacade, CoreServerAttributeGroupFacade {
    var dateTime : String
        get()  = attributeStringf320f1e5.get(this, "datetime")
        set(newValue) {attributeStringf320f1e5.set(this, "datetime", newValue)}


}

public class TITLE(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("title", consumer, initialAttributes), CommonEventsGroupFacade, CoreAttributeGroupFacade, CoreServerAttributeGroupFacade {

}

public class TR(initialAttributes : Map<String, String>, override val consumer : TagConsumer<*>) : HTMLTag("tr", consumer, initialAttributes), CommonEventsGroupFacade, CoreAttributeGroupFacade, CoreServerAttributeGroupFacade {

}

