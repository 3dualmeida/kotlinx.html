package html4k

import html4k.*
import html4k.impl.*

/*******************************************************************************
    DO NOT EDIT
    This file was generated by module generate
*******************************************************************************/

public open class HTMLTag(override val name : String, override val consumer : TagConsumer<*>, val initialAttributes : Map<String, String>) : Tag {

    override val attributes : DelegatingMap = DelegatingMap(initialAttributes, this) {consumer}

    deprecated("you shouldn't use tag div here")
    open fun div(classes : String? = null, block : DIV.() -> Unit) : Unit = buildDIV(listOf("class" to classes).toAttributesMap(), consumer, block)

    deprecated("you shouldn't use tag p here")
    open fun p(block : P.() -> Unit) : Unit = buildP(emptyMap(), consumer, block)

    deprecated("you shouldn't use tag head here")
    open fun head(block : HEAD.() -> Unit) : Unit = buildHEAD(emptyMap(), consumer, block)

    deprecated("you shouldn't use tag a here")
    open fun a(href : String? = null, target : Targets? = null, block : A.() -> Unit) : Unit = buildA(listOf("href" to href,"target" to target?.enumEncode()).toAttributesMap(), consumer, block)

    deprecated("you shouldn't use tag html here")
    open fun html(block : HTML.() -> Unit) : Unit = buildHTML(emptyMap(), consumer, block)

    deprecated("you shouldn't use tag body here")
    open fun body(block : BODY.() -> Unit) : Unit = buildBODY(emptyMap(), consumer, block)

    deprecated("you shouldn't use tag title here")
    open fun title(content : String = "") : Unit = buildTITLE(emptyMap(), consumer, {+content})

    deprecated("you shouldn't use tag span here")
    open fun span(block : SPAN.() -> Unit) : Unit = buildSPAN(emptyMap(), consumer, block)


    fun Entities.plus() {
        consumer.onTagContentEntity(this)
    }

    fun String.plus() {
        consumer.onTagContent(this)
    }

    fun CDATA(s : CharSequence) {
        consumer.onCDATA(s)
    }
            }
